[{"type":"js","data":"/* Imports for global scope */\n\nMongoInternals = Package.mongo.MongoInternals;\nMongo = Package.mongo.Mongo;\nReactiveVar = Package['reactive-var'].ReactiveVar;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nECMAScript = Package.ecmascript.ECMAScript;\nAccounts = Package['accounts-base'].Accounts;\nMeteor = Package.meteor.Meteor;\nglobal = Package.meteor.global;\nmeteorEnv = Package.meteor.meteorEnv;\nWebApp = Package.webapp.WebApp;\nWebAppInternals = Package.webapp.WebAppInternals;\nmain = Package.webapp.main;\nDDP = Package['ddp-client'].DDP;\nDDPServer = Package['ddp-server'].DDPServer;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nBlaze = Package.ui.Blaze;\nUI = Package.ui.UI;\nHandlebars = Package.ui.Handlebars;\nSpacebars = Package.spacebars.Spacebars;\nmeteorInstall = Package.modules.meteorInstall;\nmeteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nPromise = Package.promise.Promise;\nAutoupdate = Package.autoupdate.Autoupdate;\nHTML = Package.htmljs.HTML;\n\n","servePath":"/global-imports.js"},{"type":"js","data":"var require = meteorInstall({\"imports\":{\"collections\":{\"pokemon.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////\n//                                                                   //\n// imports/collections/pokemon.js                                    //\n//                                                                   //\n///////////////////////////////////////////////////////////////////////\n                                                                     //\nmodule.export({\n  Pokemon: () => Pokemon\n});\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet Mongo;\nmodule.link(\"meteor/mongo\", {\n  Mongo(v) {\n    Mongo = v;\n  }\n\n}, 1);\nconst Pokemon = new Mongo.Collection('pokemon');\nMeteor.publish('pokemon', () => {\n  return Pokemon.find({});\n});\n///////////////////////////////////////////////////////////////////////\n\n}}},\"server\":{\"main.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////\n//                                                                   //\n// server/main.js                                                    //\n//                                                                   //\n///////////////////////////////////////////////////////////////////////\n                                                                     //\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet Pokemon;\nmodule.link(\"../imports/collections/pokemon\", {\n  Pokemon(v) {\n    Pokemon = v;\n  }\n\n}, 1);\nlet fs;\nmodule.link(\"fs\", {\n  default(v) {\n    fs = v;\n  }\n\n}, 2);\nMeteor.startup(() => {\n  console.log(\"start\");\n});\nMeteor.methods({\n  'pokemon.add': function (loc) {\n    console.log('adding...');\n    let user = this.userId;\n\n    if (!user) {\n      console.log('user not signed in');\n      return undefined;\n    }\n\n    let range = 0.035;\n    let rang1 = Math.random() > 0.5 ? range : -range;\n    let rang2 = Math.random() > 0.5 ? range : -range;\n    let long = loc.longitude;\n    long = long + Math.random() * rang1;\n    let lat = loc.latitude;\n    lat = lat + Math.random() * rang2;\n    let iconPath = process.env.PWD + '/public';\n    let icons = fs.readdirSync(iconPath);\n    let min = Math.ceil(0);\n    let max = Math.ceil(250);\n    let random = Math.floor(Math.random() * (max - min));\n    return Pokemon.insert({\n      image: icons[random],\n      longitude: long,\n      latitude: lat\n    });\n  }\n});\n///////////////////////////////////////////////////////////////////////\n\n}}},{\n  \"extensions\": [\n    \".js\",\n    \".json\",\n    \".jsx\"\n  ]\n});\n\nvar exports = require(\"/server/main.js\");","hash":"c2fd7b18b34d0637c337f1cede9529b726ad4e09","servePath":"/app.js","sourceMap":{"version":3,"sources":["imports/collections/pokemon.js","server/main.js"],"names":["module","export","Pokemon","Meteor","link","v","Mongo","Collection","publish","find","fs","default","startup","console","log","methods","loc","user","userId","undefined","range","rang1","Math","random","rang2","long","longitude","lat","latitude","iconPath","process","env","PWD","icons","readdirSync","min","ceil","max","floor","insert","image"],"mappings":"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","file":"/app.js","sourcesContent":["import { Meteor }     from 'meteor/meteor'\nimport { Mongo }      from 'meteor/mongo'\n\nexport const Pokemon = new Mongo.Collection('pokemon')\n\nMeteor.publish('pokemon', () => {\n\treturn Pokemon.find({})\n})\n","import { Meteor }  from 'meteor/meteor'\nimport { Pokemon } from '../imports/collections/pokemon'\nimport fs from 'fs'\nMeteor.startup(() => {\n\tconsole.log(\"start\")\n\n})\n\nMeteor.methods({\n\t'pokemon.add': function (loc) {\n\t\tconsole.log('adding...')\n\n\t\tlet user = this.userId\n\t\tif (!user) {\n\t\t\tconsole.log('user not signed in')\n\t\t\treturn undefined\n\t\t}\n\t\tlet range = 0.035\n\t\tlet rang1 = Math.random() > 0.5 ? range : -range\n\t\tlet rang2 = Math.random() > 0.5 ? range : -range\n\t\tlet long = loc.longitude\n\t\tlong = long + Math.random() * (rang1)\n\t\tlet lat = loc.latitude\n\t\tlat = lat + Math.random() * (rang2)\n\t\tlet iconPath = process.env.PWD + '/public'\n\t\tlet icons = fs.readdirSync(iconPath)\n\n\t\tlet min = Math.ceil(0)\n\t\tlet max = Math.ceil(250)\n\t\tlet random = Math.floor(Math.random() * (max - min))\n\t\treturn Pokemon.insert({\n\t\t\timage: icons[random],\n\t\t\tlongitude: long,\n\t\t\tlatitude: lat\n\t\t})\n\t}\n\n})\n"]}}]